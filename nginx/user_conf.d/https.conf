# Disable sending the server identification
server_tokens off;

# Prevent displaying services in an iframe (clickjacking protection)
add_header X-Frame-Options SAMEORIGIN;

# Prevent browsers from detecting the mimetype if not sent by the server.
add_header X-Content-Type-Options nosniff;

# Force enable the XSS filter for the website, in case it was disabled manually
add_header X-XSS-Protection "1; mode=block";

# Configure the cache for static assets
proxy_cache_path /srv/nginx_cache levels=1:2 keys_zone=my_cache:15m max_size=10g
              inactive=60m use_temp_path=off;

# Upstream definitions for each service
upstream botpress_server {
  server botpress:3000;  # botpress container running on port 3000
}

upstream flowise_server {
  server flowise:12312;  # flowise container running on port 12312
}

upstream n8n_server {
  server n8n:5678;  # n8n container running on port 5678
}

# Botpress Subdomain Server Block
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name botpress.genomind.net;

  ssl_certificate         /etc/letsencrypt/live/genomind.net/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/genomind.net/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/genomind.net/chain.pem;
  ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;


  location ~ .*/assets/.* {
    proxy_cache my_cache;
    proxy_ignore_headers Cache-Control;
    proxy_hide_header Cache-Control;
    proxy_hide_header Pragma;
    proxy_pass http://botpress_server;
    proxy_cache_valid any 30m;
    proxy_set_header Cache-Control max-age=30;
    add_header Cache-Control max-age=30;
  }

  location /socket.io/ {
    proxy_pass http://botpress_server/socket.io/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  location / {
    proxy_pass http://botpress_server/;  # Pass to the botpress service
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}

# Flowise Subdomain Server Block
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name flowise.genomind.net;

  ssl_certificate         /etc/letsencrypt/live/genomind.net/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/genomind.net/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/genomind.net/chain.pem;
  ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

  location / {
    proxy_pass http://flowise_server/;  # Pass to the flowise service
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}

# N8N Subdomain Server Block
# N8N Subdomain Server Block
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name n8n.genomind.net;

  ssl_certificate         /etc/letsencrypt/live/genomind.net/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/genomind.net/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/genomind.net/chain.pem;
  ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

  location / {
    proxy_pass http://n8n_server/;  # Pass to the N8N service without /n8n/ path
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}

# HTTP to HTTPS Redirection for All Subdomains
server {
  listen 80;
  listen [::]:80;
  server_name botpress.genomind.net flowise.genomind.net n8n.genomind.net;

  location / {
    return 301 https://$host$request_uri;
  }
}
