version: '3.7'

services:
  botpress:
    image: amnassar/botpress:latest  # Use the Docker Hub image
    container_name: botpress-server
    user: "botpress"
    ports:
      - 3000:3000
    environment:
      - DATABASE_URL=postgres://postgres:secretpw@postgres:5435/botpress_db
      - BP_MODULE_NLU_DUCKLINGURL=http://botpress_lang:8000
      - BP_MODULE_NLU_LANGUAGESOURCES=[{"endpoint":"http://botpress_lang:3100"}]
      - EXTERNAL_URL=http://demobot.hopto.org:3000
    depends_on:
      - botpress_lang
      - postgres
    volumes:
      - ./botpress/data:/botpress/data
    networks:
      - common_net

  botpress_lang:
    image: amnassar/botpress_lang:latest  # Use the Docker Hub image
    container_name: botpress-lang
    user: "botpress"
    command: bash -c "./duckling -p 8000 & ./bp lang --langDir /botpress/lang --port 3100"
    expose:
      - 3100
      - 8000
    volumes:
      - ./botpress/language:/botpress/lang
    networks:
      - common_net

  postgres:
    image: postgres:11.2-alpine
    expose:
      - 5435
    container_name: postgres
    environment:
      PGPORT: 5435
      POSTGRES_DB: botpress_db
      POSTGRES_PASSWORD: secretpw
      POSTGRES_USER: postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - common_net

  flowise:
      image: flowiseai/flowise:2.0.5
      restart: always
      environment:
          - PORT=12312
          - FLOWISE_USERNAME=user
          - FLOWISE_PASSWORD=1234
      ports:
          - 12312:12312
      networks:
        - common_net
      volumes:
          - ./flowise:/root/.flowise
      entrypoint: /bin/sh -c "sleep 3; flowise start"

  # n8n Services
  n8n:
    image: n8nio/n8n:1.55.3
    user: "1000:1000"
    ports:
      - 5678:5678
    environment:
      - N8N_QUEUE_TYPE=redis
      - N8N_QUEUE_HOST=redis
      - N8N_QUEUE_PORT=6379
      - N8N_QUEUE_NAME=n8n
      - N8N_SECURE_COOKIE=false
    depends_on:
      - mysql
      - redis
    volumes:
      - ./n8n_data:/home/node/.n8n
    networks:
      - common_net

  mysql:
    image: mysql:8
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=n8n
      - MYSQL_USER=n8n
      - MYSQL_PASSWORD=password
    volumes:
      - ./mysql_data:/var/lib/mysql
    networks:
      - common_net

  redis:
    image: redis:latest
    volumes:
      - ./redis_data:/data
    networks:
      - common_net

  nginx:
    image: nginx:1.21
    ports:
      - 80:80
    command: nginx -g 'daemon off;';
    depends_on:
      - botpress
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
    networks:
      - common_net
networks:
  common_net:
    driver: bridge
